#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&led_strip {
    chain-length = <27>;
};

/ {
    macros {
        ControlAltDelete: ControlAltDelete {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_CONTROL &kp LEFT_ALT &kp DEL>;
            label = "CONTROLALTDELETE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp RSHFT  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp CAPSLOCK
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        layer_1 {
            bindings = <
&kp GRAVE  &kp N1    &kp N2    &kp N3        &kp N4     &kp N5     &kp N6  &kp N7    &kp N8    &kp N9     &kp N0  &kp DEL
&trans     &kp F1    &kp F2    &kp F3        &kp F4     &kp F5     &trans  &trans    &kp UP    &trans     &trans  &trans
&trans     &trans    &trans    &trans        &trans     &kp TAB    &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
                               &trans        &trans     &trans     &trans  &trans    &trans
            >;
        };

        layer_2 {
            bindings = <
&trans  &kp EXCL   &kp AT    &kp POUND       &kp DLLR         &kp PRCNT    &kp CARET          &kp AMPS   &kp ASTRK       &kp LPAR         &kp RPAR  &kp DEL
&trans  &trans     &trans    &trans          &trans           &trans       &trans             &kp EQUAL  &kp LBKT        &kp RBKT         &kp BSLH  &trans
&trans  &trans     &trans    &trans          &trans           &trans       &kp UNDER          &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp PIPE  &trans
                             &trans          &trans           &trans       &ControlAltDelete  &trans     &trans
            >;
        };

        layer_3 {
            bindings = <
&trans          &bt BT_CLR_ALL   &bt BT_NXT        &bt BT_PRV       &bt BT_CLR       &trans             &bt BT_DISC 0    &bt BT_DISC 1    &bt BT_DISC 2    &bt BT_DISC 3    &bt BT_DISC 4    &trans
&trans          &trans           &trans            &trans           &trans           &trans             &out OUT_USB     &out OUT_BLE     &trans           &trans           &trans           &trans
&rgb_ug RGB_ON  &rgb_ug RGB_OFF  &rgb_ug RGB_EFF   &rgb_ug RGB_BRI  &rgb_ug RGB_BRD  &rgb_ug RGB_HUI    &rgb_ug RGB_HUD  &rgb_ug RGB_SAI  &rgb_ug RGB_SAD  &rgb_ug RGB_SPI  &rgb_ug RGB_SPD  &trans
                                                   &trans           &trans           &trans             &trans           &trans           &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Layer3 {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
